{"version":3,"sources":["utils/misc.js","services/typeCheck.js","services/TuixueAPI.js","redux/visastatusDetailSlice.js","redux/visastatusOverviewSlice.js","utils/cookie.js","redux/visastatusFilterSlice.js","utils/USEmbassy.js","utils/i18n.js","redux/metadataSlice.js","redux/visastatusNewestSlice.js","redux/visastatusTabSlice.js","redux/index.js","hooks/useScreenXS.js","assets/img/gzh.jpg","components/TuixueHeader.js","redux/selectors.js","components/VisaStatusOverviewList/overviewPropTypes.js","components/VisaStatusOverviewList/OverviewChart.js","components/VisaStatusOverviewList/OverviewContent.js","components/VisaStatusOverviewList/index.js","components/VisaStatusOverviewList/OverviewList.js","components/EmbassyTreeSelect.js","components/EmbassySelector.js","components/EmailSubscription/useSubscriptionFormControl.js","pages/phone.js","components/VisaStatusTabs.js","pages/VisaStatus.js","pages/index.js","App.js","hooks/useScript.js","hooks/useInitialDataFetch.js","reportWebVitals.js","index.js"],"names":["renameObjectKeys","obj","Array","isArray","map","o","fromEntries","Object","entries","str","key","val","replace","s","toUpperCase","getDateFromISOString","split","getTimeFromUTC","u","date","Date","getHours","getMinutes","getSeconds","toString","padStart","dateDiff","start","end","checkVisaType","visaType","includes","checkVisaTypeLst","visaTypeLst","every","vt","checkEmbassyCodeLst","embassyCodeLst","ec","checkDateObj","dtObj","prototype","call","HEADERS","Accept","constructURL","path","query","protocol","url","URL","process","paramKey","paramVal","forEach","searchParams","append","getVisaStatusMetadata","a","fetch","method","headers","res","ok","json","responseJson","console","error","getVisaStatusOverview","embassyCode","since","to","Error","tp","queryParam","visa_type","embassy_code","toISOString","getDetailVisaStatus","timestamp","slice","visastatusDetailSlice","createSlice","name","initialState","F","timeRange","detail","J","B","H","O","L","reducers","updateDeatil","state","action","payload","availableDates","reducer","actions","fetchVisaStatusDetail","dispatch","getState","selectedEmb","visastatusFilter","length","Promise","resolve","now","setMilliseconds","secs","setSeconds","parseInt","vsDetail","rawDetail","writeTime","availableDate","visastatusOverviewSlice","today","span","updateOverview","overviewLstToday","overviewLstSpan","overview","overviewIdx","findIndex","ov","push","fetchVisaStatusOverview","setMinutes","past","setDate","getDate","vsOverview","visaStatus","earliestDate","latestDate","rest","setCookie","value","Cookies","set","getCookie","defaultValue","get","JSON","parse","visastatusFilterSlice","updateFilter","newFilter","updateFilterAndFetch","embassyAttributeLst","embassyAttributeIdx","attr","idx","findEmbassyAttributeByCode","code","embassyLst","embassy","find","emb","countries","registerLocale","require","resources","en","translation","countryCode","webNotify","sysStatus","checkee","filter","desc","systemDesc","default","domestic","placeholder","overMinuteChartTitle","overMinuteChartTitleShort","overDateChartTitle","overDateChartSubtitle","overDateChartSubtitleNull","at","all","refreshDone","title","earliest","newest","latest","emailIcon","emailIconShort","QQIcon","QQIconShort","addtionalIcon","newestFetch","aheadDay","ahead","cancelDate","notification","initTitle","initContent","content","blocked","noSupport","TGDomestic","TGNonDomestic","QQDescDomestic","QQDescNonDomestic","QQGroupDomestic","QQGroupNonDomestic","additionalInfoTop","part1","part2","footer","prjDesc","join","part3","disqus","global","loadFail","loading","emailForm","selectVisaType","selectEmbassy","selectTill","emailAddress","requireVisaType","requireEmbassy","requireEmail","removeItem","addSubsItem","subscribe","unsubscribe","tab","subscription","unsubscription","successText","confirming","subscribed","deleted","loadingText","failureText","redirecting","closing","description","zh","Refresh","Location","i18n","use","LanguageDetector","initReactI18next","init","fallbacklng","interpolation","escapeValue","format","lng","getName","select","namespace","lngs","metadataSlice","region","regionCountryEmbassyTree","visaTypeDetails","defaultFilter","updateMetadata","metadata","visastatusNewestSlice","from","reduce","updateNewest","visastatusTabSlice","changeTab","activeKey","configureStore","visastatusNewest","visastatusOverview","visastatusTab","visastatusDetail","useBreakpoint","Grid","useScreenXS","useState","screenXS","setScreenXS","screens","useEffect","screenWidths","screen","Header","Layout","NavMenu","mode","theme","onClick","useTranslation","t","Item","NavMenuPopover","menuPop","setMenuPop","visible","overlayStyle","minWidth","trigger","placement","arrowPointAtCenter","size","icon","CloseOutlined","MenuOutlined","LanguageButton","language","changeLanguage","shape","style","width","height","display","justifyContent","alignItems","Nav","className","xs","sm","md","lg","xl","justify","metadataSelector","newestSelector","embassyLstSelector","createSelector","makeCountryCodeSelector","qqTgInfo","nondomesticDefaultFilter","makeEmbassyBySysSelector","sys","embassyOptionsSelector","nameEn","rceTreeSelector","makeSelectorMakerByVisaType","selector","output","e","makeOverviewSelectorByVisaType","makeFilterSelectorByVisaType","makeDetailSelectorByVisaType","makeOverviewSpanSelectorByVisaType","makeDateChartData","rawData","chartData","reverse","index","earliestDateObj","latestDateObj","earliestDateDiffLst","latestDateDiffLst","getAvg","arr","acc","c","toFixed","overviewAttrProps","PropTypes","string","isRequired","arrayOf","oneOfType","number","dataZoom","type","bottom","borderColor","backgroundColor","handleIcon","handleSize","handleStyle","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","OverviewChartByMinute","useDispatch","minuteChartDataSelector","useMemo","vsFilter","tsStart","tsEnd","availDateLst","dataIndex","current","makeMinuteChartData","useSelector","notMerge","option","text","xAxis","data","yAxis","nameLocation","nameGap","legend","tooltip","formatter","pack","marker","seriesName","toolbox","show","feature","myRefresh","onclick","open","message","series","renderItem","params","api","xValue","earliestPoint","coord","latestPoint","stroke","visual","children","x1","y1","x2","y2","OverviewChartByDate","dateChartDataSelector","overviewData","earliestDiffMean","latestDiffMean","d","header","componentSubType","earliestDateStr","latestDateStr","rangeStr","encode","x","y","dimensions","textAlign","embassyName","Panel","Collapse","DropdownContent","additionalInfoKey","aheadInfo","ContentBar","countryCodeSelector","cardDrop","setCardDrop","DropdownControlBtn","PlusOutlined","rotate","BriefOverview","align","gutter","ghost","onChange","showArrow","ContentCard","HeaderBar","HeaderCard","OverviewHeader","OverviewContent","newestVisaStatueSelector","OverviewList","overviewSelector","makeOverviewDetailSelector","itemLayout","dataSource","EmbassyTreeSelect","setSys","treeSelectProps","embassyTreeSelector","forFilterSelect","embassyOptions","rceTree","embassyBySys","countryEmbassyMap","selectable","country","countryNode","regionNode","makeEmbassyTreeSelector","embassyTreeOptions","regionLst","SysSelect","Group","target","dropdownRender","originalNode","padding","treeData","filterTreeNode","inputValue","treeNode","toLowerCase","showSearch","allowClear","maxTagCount","listHeight","treeDefaultExpandedKeys","EmbassySelector","embassyBySysSelector","filterSelector","displayValue","domesticRegion","r","dropdownOpen","setDropdownOpen","stringify","SelectDefaultFilter","SelectDomesticOnly","onDropdownVisibleChange","multiple","treeCheckable","Form","useForm","layout","labelCol","wrapperCol","tailLayout","offset","Phone","id","initialValues","remember","onFinish","values","alert","city","log","onFinishFailed","errorInfo","label","rules","required","pattern","htmlType","TabPane","Tabs","VisaStatusTabs","func","setFunc","changeTabAndSetCookie","renderTabBar","props","DefaultTabBar","flexGrow","tabPosition","centered","LineChartOutlined","src","gzh","alt","Content","Title","Typography","VisaStatus","level","margin","Pages","exact","component","App","ReactGA","initialize","pageview","window","location","pathname","search","regionAttr","additionalInfo","embassyNameEn","embassyNameCn","nameCn","countryCodes","Set","countryNameEn","countryNameCn","regionNameEn","regionNameCn","additionalInfoEn","additionalInfoCn","cancelDateCn","cancelDateEn","addResources","giganticFetch","useInitialDataFetch","script","document","createElement","async","body","appendChild","removeChild","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3d85b2e.chunk.js","sourcesContent":["import fromEntries from \"fromentries\";\nimport moment from \"moment\";\n\nconst snakeToCamel = str => str.replace(/_(.)/g, s => s[1].toUpperCase());\n\nexport const renameObjectKeys = obj => {\n    if (typeof obj !== \"object\" || obj === null) {\n        return obj;\n    }\n\n    if (Array.isArray(obj)) {\n        return obj.map(o => renameObjectKeys(o));\n    }\n\n    return fromEntries(Object.entries(obj).map(([key, val]) => [snakeToCamel(key), renameObjectKeys(val)]));\n};\n\n/**\n * Extract the year, month date from datetime string\n * Not using javascript's Date class cause it sucks at datetime string parsing\n * @param {string} s ISO Datetime string in format of `YYYY-MM-DDTHH:MM:SS`\n */\nexport const getDateFromISOString = s => s.split(\"T\")[0].split(\"-\");\nexport const getTimeFromISOString = s =>\n    s\n        .split(\"T\")[1]\n        .split(\":\")\n        .map(i => i.split(\".\")[0]);\n\nexport const getTimeFromUTC = u => {\n    const date = new Date(u);\n    return [date.getHours(), date.getMinutes(), date.getSeconds()].map(o => o.toString().padStart(2, \"0\"));\n};\n\nexport const dateDiff = (start, end) => {\n    return end ? (new Date(end) - new Date(start)) / 86400000 : null;\n};\n\n/**\n * Convert a moment object to ISO string using the year, month, day part. moment().format() output is actually\n * local time, but we treat the [year, month, day] as UTC date for practical purpose.\n *\n * @param {moment} mnt the moment.js object.\n * @returns {string} The ISO formatted string.\n */\nexport const momentToISOString = mnt => new Date(Date.UTC(mnt.year(), mnt.month(), mnt.date())).toISOString();\n\n/**\n * Convert an ISOString to momentjs object using it's [year, month, day] part. P.S. moment(Number[]) with return\n * a object with [year, month, day] as local time.\n *\n * @param {string} isoString ISO formatted datetime string\n * @returns {moment} The momentjs object\n */\nexport const isoStringToMoment = isoString => {\n    const utc = new Date(Date.parse(isoString));\n    return moment([utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate()]);\n};\n\n/**\n * Imperfect mimic of python `zip` function\n *\n * @param  {...any[]} sequences Arrays for zipping\n * @returns {...any[][]} Zipped array\n */\nexport const zip = (...sequences) => [...sequences[0]].map((_, idx) => sequences.map(seq => seq[idx]));\n","export const checkVisaType = visaType => {\n    return typeof visaType === \"string\" && \"FJBOHL\".includes(visaType);\n};\n\nexport const checkVisaTypeLst = visaTypeLst => visaTypeLst.every(vt => checkVisaType(vt));\n\nexport const checkEmbassyCode = embssyCode => {\n    return typeof embssyCode === \"string\";\n};\n\nexport const checkEmbassyCodeLst = embassyCodeLst => embassyCodeLst.every(ec => checkEmbassyCode(ec));\n\nexport const checkDateObj = dtObj => {\n    // https://stackoverflow.com/a/643827/10529848\n    return Object.prototype.toString.call(dtObj) === \"[object Date]\";\n};\n","import { renameObjectKeys } from \"../utils/misc\";\nimport * as tp from \"./typeCheck\";\n\nconst { REACT_APP_API_BASE_URL: API_BASE_URL } = process.env;\nconst metadata = \"/visastatus/meta\";\nconst overview = \"/visastatus/overview\";\nconst detail = \"/visastatus/detail\";\nconst latest = \"/ws/visastatus/latest\";\nconst email = {\n    subscription: step => `/email/subscription/${step}`,\n    unsubscription: step => `/email/unsubscription/${step}`,\n};\n\nconst HEADERS = {\n    Accept: \"application/json\",\n};\n\n/**\n * Construct a REST api URL with given path and query parameters.\n * @param {string} path     REST api endpoint\n * @param {Object} query    Object used to construct query parameters\n * @return {string}         The constructed URL string\n */\nconst constructURL = ({ path, query = null, protocol = \"https\" }) => {\n    const url = new URL(path, `${protocol}://${API_BASE_URL}`);\n    if (query) {\n        for (const [paramKey, paramVal] of Object.entries(query)) {\n            if (Array.isArray(paramVal)) {\n                paramVal.forEach(val => url.searchParams.append(paramKey, val));\n            } else {\n                url.searchParams.append(paramKey, paramVal);\n            }\n        }\n    }\n    return url.toString();\n};\n\n/**\n * GET `${API_BASE_URL}/visastatus/meta`\n *\n * Get metadata on embassy/consulate categorization and embassy/consulate attributes.\n * @return {Object} The object containing metadata info.\n */\nexport const getVisaStatusMetadata = async () => {\n    const url = constructURL({ path: metadata });\n\n    let res;\n    let responseJson;\n    try {\n        res = await fetch(url, { method: \"GET\", headers: HEADERS });\n        if (res.ok) {\n            responseJson = renameObjectKeys(await res.json());\n        }\n    } catch (e) {\n        console.error(`In getVisaStatusMetadata: ${e}`);\n    }\n\n    return responseJson || null;\n};\n\n/**\n * GET `${API_BASE_URL}/visastatus/overview`\n *\n * Get visa status' `{earliest_date, latest_date}` of a given `date`\n * @param {Array|string} visaType Array of string standing for types of Visa.\n * @param {Array|string} embassyCode Array of string standing for a unqiue U.S. Embassy/Consulate.\n * @param {Date} since Datetime that stands for the start date of retrieving data.\n * @param {Date} to Datetime that stands for the end date of retrieving data.\n * @return {Array} An array of overviews aggregated by date.\n */\nexport const getVisaStatusOverview = async (visaType, embassyCode, since, to) => {\n    if (!visaType || !embassyCode) {\n        throw new Error(`visaTypes: ${visaType} or embassyCodes ${embassyCode} are not valid.`);\n    }\n\n    const visaTypeLst = Array.isArray(visaType) ? visaType : [visaType];\n    const embassyCodeLst = Array.isArray(embassyCode) ? embassyCode : [embassyCode];\n    if (!tp.checkVisaTypeLst(visaTypeLst)) {\n        throw new Error(`In getVisaStatusOverview: received invalid visaType: ${visaType}`);\n    }\n    if (!tp.checkEmbassyCodeLst(embassyCodeLst)) {\n        throw new Error(`In getVisaStatusOverview: received invalid embassyCode: ${embassyCode}`);\n    }\n    if (since && !tp.checkDateObj(since)) {\n        throw new Error(`In getVisaStatusOverview: received invalid since: ${since}`);\n    }\n    if (to && !tp.checkDateObj(to)) {\n        throw new Error(`In getVisaStatusOverview: received invalid to: ${to}`);\n    }\n\n    const queryParam = { visa_type: visaTypeLst, embassy_code: embassyCodeLst };\n    if (since) {\n        queryParam.since = since.toISOString();\n    }\n    if (to) {\n        queryParam.to = to.toISOString();\n    }\n\n    const url = constructURL({ path: overview, query: queryParam });\n\n    let res;\n    let responseJson;\n    try {\n        res = await fetch(url, { method: \"GET\", headers: HEADERS });\n        if (res.ok) {\n            responseJson = renameObjectKeys(await res.json());\n        }\n    } catch (e) {\n        console.error(`In getVisaStatusOverview: ${e}`);\n    }\n\n    return responseJson || null;\n};\n\n/**\n * GET `${API_BASE_URL}/visastatus/detail`\n *\n * Get the detail records of `(visaType, embassyCode)`.\n * @param {string} visaType A single visaType string\n * @param {Array|string} embassyCode A single embassyCode string\n * @param {Date} timestamp Date of the records for a `(visaType, embassyCode)` group\n * @return {Object} An object with shape of `{visa_type, embassy_code, time_range, detail}`\n */\nexport const getDetailVisaStatus = async (visaType, embassyCode, timestamp) => {\n    if (!visaType || !embassyCode) {\n        throw new Error(`visaTypes: ${visaType} or embassyCodes ${embassyCode} are not valid.`);\n    }\n    const embassyCodeLst = Array.isArray(embassyCode) ? embassyCode : [embassyCode];\n    if (!tp.checkVisaType(visaType)) {\n        throw new Error(`In getSingleVisaStatus: received invalid visaType: ${visaType}`);\n    }\n    if (!tp.checkEmbassyCodeLst(embassyCodeLst)) {\n        throw new Error(`In getSingleVisaStatus: received invalid embassyCode: ${embassyCode}`);\n    }\n    if (!tp.checkDateObj(timestamp)) {\n        throw new Error(`In getSingleVisaStatus: received invalid timestamp: ${timestamp}`);\n    }\n\n    const url = constructURL({\n        path: detail,\n        query: {\n            visa_type: visaType,\n            embassy_code: embassyCode,\n            timestamp: timestamp.toISOString().slice(0, -1),\n        },\n    });\n\n    let res;\n    let responseJson;\n    try {\n        res = await fetch(url, { method: \"GET\", headers: HEADERS });\n        responseJson = renameObjectKeys(await res.json());\n    } catch (e) {\n        console.error(`In getSingleVisaStatus: ${e}`);\n    }\n\n    return responseJson || null;\n};\n\n/**\n * Return an WebSocket connected to the backend WebSocket endpoint.\n */\nexport const openLatestVisaStatusSocket = () => {\n    console.log(\"Returning a new WebSocket connection\");\n    return new WebSocket(constructURL({ path: latest, protocol: \"wss\" }));\n};\n\nexport const postEmailSubscription = async (subscriptionOp, step, requestBody) => {\n    if (![\"subscription\", \"unsubscription\"].includes(subscriptionOp)) {\n        throw new Error(\n            \"In postEmailSubscription: param subscriptionOp should be one of ['subscription', 'unsubscription']\",\n        );\n    }\n\n    if (![\"confirming\", \"subscribed\", \"deleted\"].includes(step)) {\n        throw new Error(\n            \"In postEmailSubscription: param step should be one of ['confirming', 'subscribed', 'deleted']\",\n        );\n    }\n\n    if (\n        (subscriptionOp === \"subscription\" && step === \"deleted\") ||\n        (subscriptionOp === \"unsubscription\" && step === \"subscribed\")\n    ) {\n        throw new Error(\"In postEmailSubscription: invalid combination of subscriptionOp and step!\");\n    }\n\n    if (!requestBody || Object.keys(requestBody).length === 0) {\n        throw new Error(\"In postEmailSubscription: no subscription object provided\");\n    }\n\n    const url = constructURL({ path: email[subscriptionOp](step) });\n\n    let res;\n    try {\n        res = await fetch(url, {\n            method: \"POST\",\n            headers: HEADERS,\n            body: JSON.stringify({ [subscriptionOp]: requestBody }),\n        });\n    } catch (e) {\n        console.error(`In getVisaStatusMetadata: ${e}`);\n    }\n\n    return res.ok && step === \"confirming\" ? res.status === 202 : res.status === 204;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getDetailVisaStatus } from \"../services\";\nimport { getDateFromISOString } from \"../utils/misc\";\n\nconst visastatusDetailSlice = createSlice({\n    name: \"visastatusDetail\",\n    initialState: {\n        F: { timeRange: [], detail: {} },\n        J: { timeRange: [], detail: {} },\n        B: { timeRange: [], detail: {} },\n        H: { timeRange: [], detail: {} },\n        O: { timeRange: [], detail: {} },\n        L: { timeRange: [], detail: {} },\n    },\n    reducers: {\n        updateDeatil: (state, action) => {\n            const { visaType, timeRange, detail } = action.payload;\n            state[visaType].timeRange = timeRange;\n            detail.forEach(({ embassyCode, availableDates }) => {\n                state[visaType].detail[embassyCode] = availableDates;\n            });\n        },\n    },\n});\n\nconst { reducer, actions } = visastatusDetailSlice;\nexport const { updateDeatil } = actions;\n\nexport const fetchVisaStatusDetail = visaType => async (dispatch, getState) => {\n    const {\n        visastatusFilter: { [visaType]: selectedEmb },\n    } = getState();\n\n    if (selectedEmb.length === 0) {\n        return Promise.resolve();\n    }\n\n    try {\n        const now = new Date();\n        now.setMilliseconds(0);\n        const secs = now.getSeconds();\n        now.setSeconds(parseInt(secs / 5, 10) * 5);\n        const vsDetail = await getDetailVisaStatus(visaType, selectedEmb, now);\n        if (vsDetail) {\n            const { timeRange, detail: rawDetail } = vsDetail;\n            const detail = rawDetail.map(({ embassyCode, availableDates }) => ({\n                embassyCode,\n                availableDates: availableDates.map(({ writeTime, availableDate }) => ({\n                    writeTime,\n                    availableDate: availableDate === null ? null : getDateFromISOString(availableDate),\n                })),\n            }));\n            dispatch(updateDeatil({ visaType, timeRange, detail }));\n        }\n    } catch (e) {\n        console.error(`In fetchVisaStatusDetail: ${e}`);\n    }\n\n    return Promise.resolve();\n};\n\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getVisaStatusOverview } from \"../services\";\nimport { getDateFromISOString } from \"../utils/misc\";\n\nconst visastatusOverviewSlice = createSlice({\n    name: \"visastatusOverview\",\n    initialState: {\n        today: { F: [], J: [], B: [], O: [], H: [], L: [] },\n        span: { F: [], J: [], B: [], H: [], O: [], L: [] },\n    },\n    reducers: {\n        updateOverview: (state, action) => {\n            const { visaType, overviewLstToday, overviewLstSpan } = action.payload;\n            overviewLstToday.forEach(overview => {\n                const overviewIdx = state.today[visaType].findIndex(ov => ov.embassyCode === overview.embassyCode);\n                if (overviewIdx !== -1) {\n                    state.today[visaType][overviewIdx] = overview;\n                } else {\n                    state.today[visaType].push(overview);\n                }\n            });\n            state.span[visaType] = overviewLstSpan;\n        },\n    },\n});\n\nconst { reducer, actions } = visastatusOverviewSlice;\nexport const { updateOverview } = actions;\n\nexport const fetchVisaStatusOverview = visaType => async (dispatch, getState) => {\n    const {\n        visastatusFilter: { [visaType]: selectedEmb },\n    } = getState();\n\n    if (selectedEmb.length === 0) {\n        return Promise.resolve();\n    }\n\n    const now = new Date();\n    now.setSeconds(0);\n    now.setMilliseconds(0);\n    now.setMinutes(0);\n    const past = new Date();\n    past.setSeconds(0);\n    past.setMilliseconds(0);\n    past.setMinutes(0);\n    past.setDate(now.getDate() - 60);\n\n    try {\n        const vsOverview = await getVisaStatusOverview(visaType, selectedEmb, past, now);\n        if (vsOverview) {\n            const { visaStatus } = vsOverview;\n            const overviewLstToday = visaStatus[0].overview.map(({ earliestDate, latestDate, ...rest }) => ({\n                ...rest,\n                earliestDate: getDateFromISOString(earliestDate),\n                latestDate: getDateFromISOString(latestDate),\n            }));\n            dispatch(updateOverview({ visaType, overviewLstToday, overviewLstSpan: visaStatus }));\n        }\n    } catch (e) {\n        console.error(`In fetchVisaStatusOverview: ${e}`);\n    }\n\n    return Promise.resolve();\n};\n\nexport default reducer;\n","import Cookies from \"js-cookie\";\n\nexport const setCookie = (name, value) => {\n    Cookies.set(name, value);\n};\n\nexport const getCookie = (name, defaultValue) => {\n    const value = Cookies.get(name) || defaultValue;\n    return typeof defaultValue === typeof value ? value : JSON.parse(value);\n};\n\nexport const deleteCookie = name => Cookies.remove(name);\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchVisaStatusDetail } from \"./visastatusDetailSlice\";\nimport { fetchVisaStatusOverview } from \"./visastatusOverviewSlice\";\nimport { setCookie } from \"../utils/cookie\";\n\nconst visastatusFilterSlice = createSlice({\n    name: \"visastatusFilter\",\n    initialState: { F: [], J: [], B: [], O: [], H: [], L: [] },\n    reducers: {\n        updateFilter: (state, action) => {\n            const { visaType, newFilter } = action.payload;\n            state[visaType] = newFilter;\n        },\n    },\n});\n\nconst { reducer, actions } = visastatusFilterSlice;\nexport const { updateFilter } = actions;\n\nexport const updateFilterAndFetch = (visaType, newFilter) => async dispatch => {\n    setCookie(`filter-${visaType}`, newFilter);\n    dispatch(updateFilter({ visaType, newFilter }));\n    dispatch(fetchVisaStatusOverview(visaType));\n    dispatch(fetchVisaStatusDetail(visaType));\n    return Promise.resolve();\n};\n\nexport default reducer;\n","import fromEntries from \"fromentries\";\n\nexport const embassyAttributeLst = [\n    \"nameCn\",\n    \"nameEn\",\n    \"code\",\n    \"sys\",\n    \"region\",\n    \"continent\",\n    \"country\",\n    \"tzInfo\",\n    \"crawlerCode\",\n];\nexport const embassyAttributeIdx = fromEntries(embassyAttributeLst.map((attr, idx) => [attr, idx]));\n\n/**\n *\n * @param {str} attr one of `embassyAttributeLst`.\n * @param {str} code embassyCode\n * @param {Array} embassyLst List of embassy attribute array\n */\nexport const findEmbassyAttributeByCode = (attr, code, embassyLst) => {\n    if (embassyAttributeLst.includes(attr)) {\n        const embassy = embassyLst.find(emb => emb[embassyAttributeIdx.code] === code);\n        if (embassy) {\n            return embassy[embassyAttributeIdx[attr]];\n        }\n    }\n};\n\nexport const findEmbassyAttributeByAnotherAttr = (targetAttr, inputAttrKey, inputAttrVal, embassyLst) => {\n    if (embassyAttributeLst.includes(targetAttr) && embassyAttributeLst.includes(inputAttrKey)) {\n        const embassy = embassyLst.find(emb => emb[embassyAttributeIdx[inputAttrKey]] === inputAttrVal);\n        if (embassy) {\n            return embassy[embassyAttributeIdx[targetAttr]];\n        }\n    }\n};\n\nexport const getEmbassyAttributeLst = (attr, embassyLst) => {\n    if (embassyAttributeLst.includes(attr)) {\n        return embassyLst.map(emb => emb[embassyAttributeIdx[attr]]);\n    }\n};\n\nexport const getAllEmbassyCodes = embassyLst => embassyLst.map(emb => emb[embassyAttributeIdx.code]);\n","import i18n from \"i18next\";\nimport countries from \"i18n-iso-countries\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\n// register languages for browser versions\ncountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\ncountries.registerLocale(require(\"i18n-iso-countries/langs/zh.json\"));\n\nexport { countries };\n\nconst resources = {\n    en: {\n        translation: {\n            countryCode: \"{{countryName, country}}\",\n            visaStatus: \"Visa Status\",\n            webNotify: \"Auto Web Notify\",\n            sysStatus: \"System Status\",\n            checkee: \"Check Reporter\",\n            filter: {\n                desc: \"Choose Embassy/Consulate\",\n                systemDesc: \"Filter by system: \",\n                default: \"Reset to default\",\n                domestic: \"Domestic only\",\n                placeholder: \"Search or select U.S. Embassy or Consulate\",\n            },\n            overMinuteChartTitle: \"First available appointment change within 24h\",\n            overMinuteChartTitleShort: \"Detail\",\n            overDateChartTitle: \"Appointment change within 60 days - {{embassyName}}\",\n            overDateChartSubtitle:\n                \", appointments should be made {{earliestDiffMean}} ~ {{latestDiffMean}} days in advance\",\n            overDateChartSubtitleNull: \", without any available appointment\",\n            at: \"at\",\n            all: \"All\",\n            refreshDone: \"Done with refresh\",\n            overview: {\n                title: \"Visa Status Overview\",\n                earliest: \"Earliest availabe appointment date of today\",\n                newest: \"Latest fetching result of available appointment date\",\n                latest: \"Latest available appointment date of today\",\n                emailIcon: \"Subscribe from email\",\n                emailIconShort: \"Email\",\n                QQIcon: \"Contact Way\",\n                QQIconShort: \"QQ/TG\",\n                addtionalIcon: \"Additional information\",\n                earliestDate: \"Earliest Date\",\n                latestDate: \"Latest Date\",\n                newestFetch: \"Newest Fetch\",\n                actions: \"Expand\",\n                aheadDay: \"Date Ahead\",\n                ahead: \"Average appointment date in advance\",\n            },\n            cancelDate: \"文灿教育\",\n            notification: {\n                initTitle: \"Auto-notification is enabled\",\n                initContent: \"If a new position pops up, the browser will pop up a notification ASAP\",\n                title: \"{{visaTypeDetail}} Visa Status Changed\",\n                content: \"{{embassyName}} changed from {{prevAvaiDate}} to {{currAvaiDate}}.\",\n                blocked: \"Notifications blocked. Please enable it in your browser.\",\n                noSupport: \"This browser does not support web notification.\",\n            },\n            TGDomestic: \"Telegram Channel link (domestic): \",\n            TGNonDomestic: \"Telegram Channel link (global): \",\n            QQDescDomestic:\n                \"**QQ group entry password is the site URL, a total of 13 characters \\\"tuixue.online\\\".** All groups' content are the same. Pattern: CGI system will release the quota released by others 6-8 hours ago at XX:48; if the notification received doesn't conform to this pattern, most likely a large quota has been released.\",\n            QQDescNonDomestic:\n                \"The global version includes popular areas for getting visa in third country, including {{cities}}\",\n            QQGroupDomestic: \"Domestic #{{index}}: \",\n            QQGroupNonDomestic: \"Global #{{index}}: \",\n            additionalInfoTop: {\n                part1: \"Teacher Cao\",\n                part2: \"13901797322\",\n            },\n            footer: {\n                prjDesc: [\n                    \"Features: Auto-notification at webpage (no need to keep an eye on it, [test link](/notification)), customize the location filter that only you concerned about, update data in real-time, email notifications, qq group notifications and Telegram Channel (see the tab next to the chart), and various notes on going to the corresponding region (domestic, Ecuador, Singapore, UK)\",\n                    \"Project Info: [GitHub Page](https://github.com/Trinkle23897/tuixue.online-visa); Author list: [Trinkle23897](https://github.com/Trinkle23897/), [z3dd1cu5](https://github.com/z3dd1cu5), [BenjiTheC](https://github.com/BenjiTheC)\",\n                    \"If you find any issue of this website, please send an email to [trinkle23897@gmail.com](mailto:trinkle23897@gmail.com).\",\n                    \"If you think tuixue.online is helpful, please donate for our website, we appreciate your support!\",\n                ].join(\"\\n\\n\"),\n                part1: \"This website has witnessed a total of \",\n                part2: \" tuixue (withdrawals). \",\n                part3: \"About the poor author\",\n            },\n            disqus: {\n                domestic: \"Disqus (Domestic version)\",\n                global: \"Disqus (Global version)\",\n                loadFail: \"Unable to load Disqus comments :(\",\n                loading: \"Loading Disqus ...\",\n            },\n            emailForm: {\n                title: \"Email Subscription\",\n                selectVisaType: \"Select Visa Type\",\n                selectEmbassy: \"Select Embassy\",\n                selectTill: \"Select Date of Till\",\n                emailAddress: \"Email Address\",\n                requireVisaType: \"Visa Type field is required!\",\n                requireEmbassy: \"Embassy field is required!\",\n                requireEmail: \"Email address is required!\",\n                removeItem: \"Remove this item\",\n                addSubsItem: \"Add another Subscription Rule\",\n                subscribe: \"Submit\",\n                unsubscribe: \"Submit\",\n                tab: {\n                    subscription: \"Subscription\",\n                    unsubscription: \"Unsubscription\",\n                },\n                successText: {\n                    confirming: \"Subscription request sent. Please check your email and click the confirmation link.\",\n                    subscribed: \"Successfully subscribed. Thank you!\",\n                    deleted: \"Successfully unsubscribed. Thank you!\",\n                },\n                loadingText: \"We are processing your request.\",\n                failureText: \"Something goes wrong, we are sorry. Please try again.\",\n                redirecting: \"Redirecting to home page in 3 seconds...\",\n                closing: \"Closing in 3 seconds...\",\n                description: [\n                    \"## Email Subscription\",\n                    \"Whenever the first available appointment becomes earlier, tuixue.online will send you an email notification. The actual delay is about 10s.\",\n                    \"- Submit (or update) your email subscription: fill in the form and submit, then a confirmation email will be sent from dean@tuixue.online. **Please click on the confirmation link to make your subscription active**.\",\n                    \"- Effect: if one subscribes to Beijing F1 visa with a date of X (left blank for FOREVER), he/she will receive an email notification when this place releases any available appointment slot earlier than (or including) date X.\",\n                    '- Unsubscribe: click \"Unsubscription\" tab below, enter the email, and a confirmation letter will be sent to your email address, click the corresponding link inside.',\n                    \"- Pattern: CGI system will release the quota released by others 6-8 hours ago at XX:48, AIS system is released every 5 minutes (00/05/.../55) for the quota returned by others 5-7 hours ago; if the notification email received doesn't conform to this pattern, most likely a large quota has been released.\",\n                ].join(\"\\n\\n\"),\n            },\n        },\n    },\n    zh: {\n        translation: {\n            countryCode: \"{{countryName, country}}\",\n            visaStatus: \"签证预约状态\",\n            webNotify: \"网页自动通知\",\n            sysStatus: \"系统当前状态\",\n            checkee: \"签证结果统计\",\n            filter: {\n                desc: \"选择使领馆\",\n                systemDesc: \"选择系统：\",\n                default: \"恢复默认\",\n                domestic: \"只看国内\",\n                placeholder: \"搜选使领馆（网页版可输入搜索）\",\n            },\n            overMinuteChartTitle: \"24h内可预约日期变动情况\",\n            overMinuteChartTitleShort: \"详细信息\",\n            overDateChartTitle: \"{{embassyName}}60天内预约日期变动情况\",\n            overDateChartSubtitle: \"，平均需要提前{{earliestDiffMean}}到{{latestDiffMean}}天预约\",\n            overDateChartSubtitleNull: \"，没有任何预约名额\",\n            at: \"于\",\n            all: \"全部\",\n            Refresh: \"刷新数据\",\n            refreshDone: \"已刷新至最新数据\",\n            Location: \"地点\",\n            overview: {\n                title: \"美国签证预约时间\",\n                earliest: \"今天出现的最早可预约日期\",\n                newest: \"当前日期\",\n                latest: \"今天出现的最晚可预约日期\",\n                addtionalIcon: \"更多信息\",\n                earliestDate: \"最早日期\",\n                latestDate: \"最晚日期\",\n                newestFetch: \"当前日期\",\n                actions: \"展开\",\n                aheadDay: \"提前天数\",\n                ahead: \"平均需要提前预约天数\",\n                QQIcon: \"联系方式\",\n            },\n            cancelDate: \"\",\n            notification: {\n                initTitle: \"已开启自动通知功能\",\n                initContent: \"如果有新位置放出来，浏览器会第一时间弹出通知\",\n                title: \"{{visaTypeDetail}} 签证放新位置了\",\n                content: \"{{embassyName}}: {{prevAvaiDate}} -> {{currAvaiDate}}\",\n                blocked: \"通知被浏览器屏蔽了，请手动打开它\",\n                noSupport: \"这个浏览器不支持网页版通知\",\n            },\n            additionalInfoTop: {\n                part1: \"曹老师\",\n                part2: \"13901797322\",\n            },\n            footer: {\n                prjDesc: [\n                    \"功能概览：网页版能够穿透通知（不用一直盯着或者手动刷了，[测试链接](/notification)），可以只选自己关注的城市，数据实时更新，拥有邮件通知、qq群通知和Telegram Channel（看图表旁边的选项卡）和去往对应地区各种注意事项（国内、厄瓜多尔、新加坡、英国）\",\n                    \"项目信息：[GitHub项目地址](https://github.com/Trinkle23897/tuixue.online-visa)、[作者GitHub](https://github.com/Trinkle23897/)、改进版爬虫作者 [z3dd1cu5](https://github.com/z3dd1cu5)、新版网站贡献者 [BenjiTheC](https://github.com/BenjiTheC)\",\n                    \"写这玩意还是花了一些时间的，维护也不容易（服务器要钱，验证码要钱，邮件系统是私搭的可能会被封，如果发现了网页出了什么问题，可以发邮件至 [trinkle23897@gmail.com](mailto:trinkle23897@gmail.com)），随喜打赏\",\n                ].join(\"\\n\\n\"),\n                part1: \"本网站一共见证了\",\n                part2: \"人次的失学。\",\n                part3: \"关于可怜的差点被全聚德的作者\",\n            },\n            disqus: {\n                domestic: \"原国内版评论区\",\n                global: \"原国际版评论区\",\n                loadFail: \"Disqus评论区无法加载（需要翻墙）\",\n                loading: \"正在加载Disqus评论区（需要翻墙）……\",\n            },\n            emailForm: {\n                title: \"个性化邮件订阅\",\n                selectVisaType: \"选择签证类型\",\n                selectEmbassy: \"选择使领馆\",\n                selectTill: \"截止日期（空为永久）\",\n                emailAddress: \"邮箱地址\",\n                requireVisaType: \"签证类型不能为空\",\n                requireEmbassy: \"使领馆不能为空\",\n                requireEmail: \"邮箱不能为空\",\n                removeItem: \"删除该条规则\",\n                addSubsItem: \"添加另一条订阅规则\",\n                subscribe: \"点击订阅\",\n                unsubscribe: \"取消订阅\",\n                tab: {\n                    subscription: \"增加订阅\",\n                    unsubscription: \"取消订阅\",\n                },\n                successText: {\n                    confirming: \"已收到订阅请求，请检查确认邮件并点击确认链接\",\n                    subscribed: \"已成功订阅\",\n                    deleted: \"已成功取消订阅\",\n                },\n                loadingText: \"正在处理中\",\n                failureText: \"不知道出啥问题了，可能需要再试试或者报bug？\",\n                redirecting: \"3秒后前往主页...\",\n                closing: \"3秒后关闭...\",\n                description: [\n                    \"## 个性化邮件订阅\",\n                    \"每当时间变前的时候，tuixue.online就会向您发送邮件通知。最好使用国内邮箱比如qq（因为可以绑定微信，能第一时间看到），实测延时大概10s\",\n                    \"- 提交（或更新）订阅：填写之后点击提交，dean@tuixue.online会发送确认邮件，**请点击里面的确认链接使订阅生效**；\",\n                    \"- 效果：比如订阅了北京F签信息，截止日期为X（留空为永久），如果当地出现了早于（或包含）X日期的可预约时间，则会收到一封邮件通知；\",\n                    '- 取消订阅：点击下方\"取消订阅\"标签页，输入邮箱，点击确认即可；或者切换到订阅页面，随便选一个过去的时间提交，点击确认邮件使其生效也可以达到退订效果；',\n                    \"- 规律：CGI系统会在每小时48分的时候放出6-8小时前别人放出的名额，AIS系统是每隔5分钟（00/05/…/55）放出别人5-7小时前别人退掉的名额；如果收到的通知邮件不符合这个时间规律的话，多半是放出来了一大波名额。\",\n                ].join(\"\\n\\n\"),\n            },\n        },\n    },\n};\n\ni18n.use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        resources,\n        fallbacklng: \"zh\",\n        interpolation: {\n            escapeValue: false,\n            format: (value, format, lng) =>\n                format === \"country\" ? countries.getName(value, lng, { select: \"official\" }) : value,\n        },\n    });\n\nexport const namespace = \"translation\";\nexport const lngs = { en: \"en\", zh: \"zh\" };\nexport default i18n;\n","import fromEntries from \"fromentries\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { updateFilter } from \"./visastatusFilterSlice\";\nimport { getVisaStatusMetadata } from \"../services\";\nimport { embassyAttributeIdx } from \"../utils/USEmbassy\";\nimport { getCookie } from \"../utils/cookie\";\nimport i18n, { namespace, lngs, countries } from \"../utils/i18n\";\n\nconst metadataSlice = createSlice({\n    name: \"metadata\",\n    initialState: { region: [], regionCountryEmbassyTree: [], embassyLst: [], visaTypeDetails: {}, defaultFilter: [] },\n    reducers: {\n        updateMetadata: (state, action) => action.payload.metadata,\n    },\n});\n\nconst { reducer, actions } = metadataSlice;\n\nexport const { updateMetadata } = actions;\n\nexport const fetchMetadata = () => async dispatch => {\n    let metadata;\n    try {\n        metadata = await getVisaStatusMetadata();\n        if (!metadata) {\n            // we could dispatch an error message to update redux and re-render UI\n            // For now just handle any problem silently\n            return Promise.resolve();\n        }\n    } catch (e) {\n        console.error(`In metadataSlice: ${e}`);\n    }\n\n    const { defaultFilter, embassyLst, regionAttr, additionalInfo, cancelDate } = metadata;\n    dispatch(updateMetadata({ metadata }));\n    Array.from(\"FJBOHL\").forEach(visaType =>\n        dispatch(updateFilter({ visaType, newFilter: getCookie(`filter-${visaType}`, defaultFilter) })),\n    ); // no need to set cookie here\n\n    // programatically add i18n resource\n    const embassyNameEn = fromEntries(\n        embassyLst.map(emb => [emb[embassyAttributeIdx.code], emb[embassyAttributeIdx.nameEn]]),\n    );\n    const embassyNameCn = fromEntries(\n        embassyLst.map(emb => [emb[embassyAttributeIdx.code], emb[embassyAttributeIdx.nameCn]]),\n    );\n\n    const countryCodes = Array.from(new Set(embassyLst.map(emb => emb[embassyAttributeIdx.country])));\n    const countryNameEn = fromEntries(\n        countryCodes.map(countryCode => [countryCode, countries.getName(countryCode, lngs.en, { select: \"official\" })]),\n    );\n    const countryNameCn = fromEntries(\n        countryCodes.map(countryCode => [countryCode, countries.getName(countryCode, lngs.zh, { select: \"official\" })]),\n    );\n    const regionNameEn = fromEntries(regionAttr.map(({ code, nameEn }) => [code, nameEn]));\n    const regionNameCn = fromEntries(regionAttr.map(({ code, nameCn }) => [code, nameCn]));\n    const additionalInfoEn = fromEntries(\n        additionalInfo.en.map(({ country, content }) => [`additionalInfo${country}`, content]),\n    );\n    const additionalInfoCn = fromEntries(\n        additionalInfo.zh.map(({ country, content }) => [`additionalInfo${country}`, content]),\n    );\n    const cancelDateCn = { cancelDate };\n    const cancelDateEn = { cancelDate: \"\" }; // no need to illustrate cancel date for foreign users\n    i18n.addResources(lngs.en, namespace, {\n        ...countryNameEn,\n        ...embassyNameEn,\n        ...regionNameEn,\n        ...additionalInfoEn,\n        ...cancelDateEn,\n    });\n    i18n.addResources(lngs.zh, namespace, {\n        ...countryNameCn,\n        ...embassyNameCn,\n        ...regionNameCn,\n        ...additionalInfoCn,\n        ...cancelDateCn,\n    });\n    i18n.changeLanguage(i18n.language);\n\n    return Promise.resolve();\n};\n\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getDateFromISOString } from \"../utils/misc\";\n\nconst visastatusNewestSlice = createSlice({\n    name: \"latestWritten\",\n    initialState: Array.from(\"FJBOHL\").reduce((obj, vt) => ({ ...obj, [vt]: {} }), {}),\n    reducers: {\n        updateNewest: (state, action) => {\n            const { visaType, newest } = action.payload;\n            newest.forEach(({ embassyCode, availableDate, writeTime }) => {\n                state[visaType][embassyCode] = {\n                    availableDate: availableDate ? getDateFromISOString(availableDate) : [\"/\"],\n                    writeTime,\n                };\n            });\n        },\n    },\n});\n\nconst { reducer, actions } = visastatusNewestSlice;\n\nexport const { updateNewest } = actions;\n\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCookie, setCookie } from \"../utils/cookie\";\nimport { fetchVisaStatusDetail } from \"./visastatusDetailSlice\";\nimport { fetchVisaStatusOverview } from \"./visastatusOverviewSlice\";\n\nconst visastatusTabSlice = createSlice({\n    name: \"visastatusTab\",\n    initialState: getCookie(\"visaType\", \"F\"),\n    reducers: {\n        changeTab: (state, action) => {\n            return action.payload.activeKey;\n        },\n    },\n});\n\nconst { reducer, actions } = visastatusTabSlice;\nconst { changeTab } = actions;\nexport const changeTabAndSetCookie = activeKey => async dispatch => {\n    setCookie(\"visaType\", activeKey);\n    dispatch(changeTab({ activeKey }));\n    dispatch(fetchVisaStatusOverview(activeKey));\n    dispatch(fetchVisaStatusDetail(activeKey));\n    return Promise.resolve();\n};\n\nexport default reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport metadata from \"./metadataSlice\";\nimport visastatusNewest from \"./visastatusNewestSlice\";\nimport visastatusFilter from \"./visastatusFilterSlice\";\nimport visastatusOverview from \"./visastatusOverviewSlice\";\nimport visastatusTab from \"./visastatusTabSlice\";\nimport visastatusDetail from \"./visastatusDetailSlice\";\n\nexport default configureStore({\n    reducer: {\n        metadata,\n        visastatusNewest,\n        visastatusFilter,\n        visastatusOverview,\n        visastatusTab,\n        visastatusDetail,\n    },\n});\n","import { useState, useEffect } from \"react\";\nimport { Grid } from \"antd\";\n\nconst { useBreakpoint } = Grid;\n\nexport default function useScreenXS() {\n    const [screenXS, setScreenXS] = useState(false);\n    const screens = useBreakpoint();\n\n    useEffect(() => {\n        const screenWidths = Object.entries(screens).filter(screen => !!screen[1]);\n        setScreenXS(screenWidths.length === 1 && (screenWidths[0][0] === \"xs\" || screenWidths[0][0] === \"sm\"));\n    }, [screens]);\n\n    return screenXS;\n}\n","export default __webpack_public_path__ + \"static/media/gzh.c4b37ff5.jpg\";","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport { Row, Col, Button, Layout, Menu, Popover } from \"antd\";\nimport { MenuOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { IoLanguageOutline } from \"react-icons/io5\";\nimport { useScreenXS } from \"../hooks\";\nimport { setCookie } from \"../utils/cookie\";\nimport gzh from \"../assets/img/gzh.jpg\";\nimport \"./TuixueHeader.less\";\n\nconst { Header } = Layout;\n\nconst NavMenu = ({ mode, theme, onClick }) => {\n    const [t] = useTranslation();\n    return (\n        <Menu theme={theme} mode={mode} onClick={onClick ? () => onClick() : () => {}}>\n            <Menu.Item key=\"visastatus\">\n                <Link to=\"/visa\">{t(\"visaStatus\")}</Link>\n            </Menu.Item>\n        </Menu>\n    );\n};\nNavMenu.propTypes = {\n    mode: PropTypes.oneOf([\"vertical\", \"horizontal\", \"inline\"]),\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    onClick: PropTypes.func,\n};\n\nconst NavMenuPopover = () => {\n    const [menuPop, setMenuPop] = useState(false);\n\n    return (\n        <Popover\n            content={<NavMenu mode=\"vertical\" theme=\"light\" onClick={() => setMenuPop(!menuPop)} />}\n            visible={menuPop}\n            overlayStyle={{ minWidth: \"65vw\" }}\n            trigger=\"click\"\n            placement=\"bottomRight\"\n            arrowPointAtCenter\n        >\n            <Button\n                onClick={() => setMenuPop(!menuPop)}\n                size=\"large\"\n                icon={menuPop ? <CloseOutlined /> : <MenuOutlined />}\n            />\n        </Popover>\n    );\n};\n\nconst LanguageButton = () => {\n    const { i18n } = useTranslation();\n    useEffect(() => setCookie(\"i18next\", i18n.language));\n    return (\n        <Button\n            onClick={() => i18n.changeLanguage(i18n.language === \"en\" ? \"zh\" : \"en\")}\n            size=\"large\"\n            shape=\"circle\"\n            icon={\n                <div // simple hack, could be optimized\n                    style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <IoLanguageOutline size=\"20px\" />\n                </div>\n            }\n        />\n    );\n};\n\nexport default function Nav() {\n    const screenXS = useScreenXS();\n\n    const Logo = () => (\n        <div className=\"logo\" style={{ justifyContent: screenXS ? \"center\" : \"flex-start\" }}>\n            <img src={gzh} height=\"40\" width=\"40\" alt=\"logo\" />\n        </div>\n    );\n\n    return (\n        <Header className=\"tuixue-header\">\n            <Row>\n                <Col\n                    xs={{ span: 24, push: 0 }}\n                    sm={{ span: 24, push: 0 }}\n                    md={{ span: 20, push: 2 }}\n                    lg={{ span: 16, push: 4 }}\n                    xl={{ span: 14, push: 5 }}\n                >\n                    <Row justify=\"center\">\n                        <Col xs={{ span: 4 }} md={0}>\n                            <div className=\"center-box\">\n                                <NavMenuPopover />\n                            </div>\n                        </Col>\n                        <Col xs={0} md={{ span: 17 }}>\n                            同济国际教育\n                        </Col>\n                        <Col xs={{ span: 4 }} md={{ span: 2 }}>\n                            <div className=\"center-box\">\n                                <LanguageButton />\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Header>\n    );\n}\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { dateDiff } from \"../utils/misc\";\nimport { embassyAttributeIdx, findEmbassyAttributeByCode } from \"../utils/USEmbassy\";\n\n// basic selectors\nconst metadataSelector = state => state.metadata;\nconst overviewTodaySelector = state => state.visastatusOverview.today;\nconst overviewSpanSelector = state => state.visastatusOverview.span;\nconst newestSelector = state => state.visastatusNewest;\nconst filterSelector = state => state.visastatusFilter;\nconst detailSelector = state => state.visastatusDetail;\n\nconst embassyLstSelector = createSelector(metadataSelector, metadata => metadata.embassyLst);\nconst qqTgInfoSelector = createSelector(metadataSelector, metadata => metadata.qqTgInfo);\nexport const nonDomesticEmbassyInDefaultFilterSelector = createSelector(\n    metadataSelector,\n    metadata => metadata.nondomesticDefaultFilter,\n);\n\nexport const makeCountryCodeSelector = embassyCode =>\n    createSelector(embassyLstSelector, embassyLst => findEmbassyAttributeByCode(\"country\", embassyCode, embassyLst));\n\nexport const makeEmbassyBySysSelector = sys =>\n    createSelector(embassyLstSelector, embassyLst =>\n        sys === \"all\"\n            ? embassyLst.map(emb => emb[embassyAttributeIdx.code])\n            : embassyLst.filter(emb => emb[embassyAttributeIdx.sys] === sys).map(emb => emb[embassyAttributeIdx.code]),\n    );\nconst embassyOptionsSelector = createSelector(embassyLstSelector, embassyLst =>\n    embassyLst.map(emb => ({ name: emb[embassyAttributeIdx.nameEn], code: emb[embassyAttributeIdx.code] })),\n);\nconst rceTreeSelector = createSelector(metadataSelector, metadata => metadata.regionCountryEmbassyTree);\nexport const makeEmbassyTreeSelector = (sys, t, forFilterSelect = true) =>\n    createSelector(\n        [embassyOptionsSelector, rceTreeSelector, makeEmbassyBySysSelector(sys)],\n        (embassyOptions, rceTree, embassyBySys) =>\n            rceTree\n                .map(({ region, countryEmbassyMap }) => ({\n                    title: t(region),\n                    value: region,\n                    key: region,\n                    selectable: forFilterSelect,\n                    children: countryEmbassyMap\n                        .map(({ country, embassyCodeLst }) => ({\n                            title: t(country),\n                            value: country,\n                            key: country,\n                            selectable: forFilterSelect,\n                            children: embassyOptions\n                                .filter(({ code }) => embassyCodeLst.includes(code) && embassyBySys.includes(code))\n                                .map(({ code }) => ({ title: t(code), value: code, key: code })),\n                        }))\n                        .filter(countryNode => countryNode.children.length > 0),\n                }))\n                .filter(regionNode => regionNode.children.length > 0),\n    );\n\n// generate `make{Some}SelectorByVisaType`\nconst makeSelectorMakerByVisaType = selector => visaType =>\n    createSelector(selector, output => {\n        if (visaType !== \"F\" && Array.isArray(output[visaType]))\n            return output[visaType].filter(e => e !== \"bju\" && e !== \"shu\" && e !== \"syu\" && e !== \"gzu\");\n        return output[visaType];\n    });\n\n// Selectors by Visa type\nconst makeOverviewSelectorByVisaType = makeSelectorMakerByVisaType(overviewTodaySelector);\nexport const makeFilterSelectorByVisaType = makeSelectorMakerByVisaType(filterSelector);\nexport const makeDetailSelectorByVisaType = makeSelectorMakerByVisaType(detailSelector);\nexport const makeOverviewSpanSelectorByVisaType = makeSelectorMakerByVisaType(overviewSpanSelector);\nexport const makeOverviewDetailSelector = visaType =>\n    createSelector(\n        [makeOverviewSelectorByVisaType(visaType), makeFilterSelectorByVisaType(visaType)],\n        (overview, filter) =>\n            filter.map(\n                code =>\n                    overview.find(ov => ov.embassyCode === code) || {\n                        visaType,\n                        embassyCode: code,\n                        earliestDate: [\"/\"],\n                        latestDate: [\"/\"],\n                    },\n            ),\n    );\n\nexport const makeNewestVisaStatusSelector = (visaType, embassyCode) =>\n    createSelector(newestSelector, newest => newest[visaType][embassyCode]);\n\nexport const makeQqTgInfoSelector = embassyCode =>\n    createSelector([embassyLstSelector, qqTgInfoSelector], (embassyLst, { qq, tg }) => {\n        const region = findEmbassyAttributeByCode(\"region\", embassyCode, embassyLst);\n        const index = region === \"DOMESTIC\" ? \"domestic\" : \"nonDomestic\";\n        return [qq[index], tg[index]];\n    });\n\n// Selectors for echart data\nexport const makeMinuteChartData = visaType =>\n    createSelector(\n        [makeDetailSelectorByVisaType(visaType), makeFilterSelectorByVisaType(visaType)],\n        (rawData, vsFilter) => {\n            const delta = 60000;\n            const { timeRange, detail } = rawData;\n            if (timeRange.length === 0) {\n                return [[], [], []];\n            }\n            const [tsStart, tsEnd] = timeRange;\n            const writeTime = [];\n            for (let t = tsStart - delta; t <= tsEnd; t += delta) {\n                writeTime.push(t);\n            }\n            const availDateLst = vsFilter.map(embassyCode => {\n                const availableDates = detail[embassyCode] || [];\n                let dataIndex = 0;\n                let current = null;\n                const avaDates = writeTime.map(t => {\n                    if (dataIndex < availableDates.length && availableDates[dataIndex].writeTime === t) {\n                        current = availableDates[dataIndex].availableDate;\n                        dataIndex += 1;\n                    }\n                    return current === null ? null : current.join(\"/\");\n                });\n                return { embassyCode, availableDates: avaDates };\n            });\n            return [writeTime, availDateLst];\n        },\n    );\n\nexport const makeDateChartData = (visaType, embassyCode) =>\n    createSelector([makeOverviewSpanSelectorByVisaType(visaType)], rawData => {\n        const chartData = rawData\n            .slice()\n            .reverse()\n            .map(({ date, overview }, index) => {\n                const earliestDateObj = {};\n                const latestDateObj = {};\n                overview.forEach(({ embassyCode: e, earliestDate, latestDate }) => {\n                    earliestDateObj[e] = earliestDate;\n                    latestDateObj[e] = latestDate;\n                });\n                const earliestDateLst = earliestDateObj[embassyCode] || null;\n                const latestDateLst = latestDateObj[embassyCode] || null;\n                return [index, date, earliestDateLst, latestDateLst];\n            });\n        const earliestDateDiffLst = chartData.filter(e => e[2] !== null).map(e => dateDiff(e[1], e[2]));\n        const latestDateDiffLst = chartData.filter(e => e[3] !== null).map(e => dateDiff(e[1], e[3]));\n        const getAvg = arr => (arr.length >= 10 ? (arr.reduce((acc, c) => acc + c, 0) / arr.length).toFixed(0) : null);\n        return [chartData, getAvg(earliestDateDiffLst), getAvg(latestDateDiffLst)];\n    });\n","import PropTypes from \"prop-types\";\n\nexport const overviewAttrProps = {\n    visaType: PropTypes.string.isRequired,\n    embassyCode: PropTypes.string.isRequired,\n    earliestDate: PropTypes.arrayOf(PropTypes.string).isRequired,\n    latestDate: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport const newestOverviewProps = {\n    newest: PropTypes.shape({\n        writeTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        availableDate: PropTypes.arrayOf(PropTypes.string).isRequired,\n    }),\n};\n\nexport const overviewProps = {\n    overview: PropTypes.shape(overviewAttrProps).isRequired,\n};\n\nexport const dropdownProps = {\n    visaType: PropTypes.string.isRequired,\n    embassyCode: PropTypes.string.isRequired,\n    countryCode: PropTypes.string.isRequired,\n};\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { notification } from \"antd\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeMinuteChartData, makeDateChartData } from \"../../redux/selectors\";\nimport { getTimeFromUTC, getDateFromISOString } from \"../../utils/misc\";\nimport { fetchVisaStatusDetail } from \"../../redux/visastatusDetailSlice\";\nimport { fetchVisaStatusOverview } from \"../../redux/visastatusOverviewSlice\";\n\nconst dataZoom = [\n    {\n        type: \"slider\",\n        height: 8,\n        bottom: 20,\n        borderColor: \"transparent\",\n        backgroundColor: \"#e2e2e2\",\n        handleIcon:\n            \"M10.7,11.9H9.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z\",\n        handleSize: 20,\n        handleStyle: {\n            shadowBlur: 6,\n            shadowOffsetX: 1,\n            shadowOffsetY: 2,\n            shadowColor: \"#aaa\",\n        },\n    },\n    {\n        type: \"inside\",\n    },\n];\n\nexport const OverviewChartByMinute = ({ visaType }) => {\n    const [t] = useTranslation();\n    const dispatch = useDispatch();\n    const minuteChartDataSelector = useMemo(() => makeMinuteChartData(visaType), [visaType]);\n    const [writeTime, availDateLst] = useSelector(state => minuteChartDataSelector(state));\n    return (\n        <ReactEcharts\n            notMerge\n            option={{\n                title: {\n                    text: \"\",\n                },\n                xAxis: {\n                    type: \"category\",\n                    data: writeTime.map(u => getTimeFromUTC(u).slice(0, -1).join(\":\")),\n                },\n                yAxis: {\n                    type: \"time\",\n                    name: t(\"overview.earliestDate\"),\n                    nameLocation: \"middle\",\n                    nameGap: 50,\n                },\n                legend: {\n                    data: availDateLst.map(({ embassyCode }) => t(embassyCode)),\n                },\n                tooltip: {\n                    trigger: \"axis\",\n                    formatter: pack => {\n                        const header = `${t(\"overMinuteChartTitle\")}: ${pack[0].name}<br/>`;\n                        const content = pack\n                            .map(({ marker, seriesName, data }) => `${marker}${seriesName}: ${data}`)\n                            .join(\"<br>\");\n                        return header + content;\n                    },\n                },\n                toolbox: {\n                    show: true,\n                    feature: {\n                        myRefresh: {\n                            title: t(\"Refresh\"),\n                            icon: \"M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5\",\n                            onclick: () => {\n                                dispatch(fetchVisaStatusOverview(visaType));\n                                dispatch(fetchVisaStatusDetail(visaType));\n                                notification.open({\n                                    message: t(\"refreshDone\"),\n                                });\n                            },\n                        },\n                    },\n                },\n                dataZoom,\n                series: availDateLst.map(({ embassyCode, availableDates }) => ({\n                    name: t(embassyCode),\n                    type: \"line\",\n                    data: availableDates,\n                })),\n            }}\n        />\n    );\n};\nOverviewChartByMinute.propTypes = {\n    visaType: PropTypes.string.isRequired,\n};\n\nconst renderItem = (params, api) => {\n    const xValue = api.value(0);\n    const earliestPoint = api.coord([xValue, api.value(1)]);\n    const latestPoint = api.coord([xValue, api.value(2)]);\n    // const halfWidth = api.size([1, 0])[0] * 0.35;\n    const style = api.style({ stroke: api.visual(\"color\") });\n    return {\n        type: \"group\",\n        children: [\n            {\n                type: \"line\",\n                shape: {\n                    x1: earliestPoint[0],\n                    y1: earliestPoint[1],\n                    x2: latestPoint[0],\n                    y2: latestPoint[1],\n                },\n                style,\n            },\n        ],\n    };\n};\n\nexport const OverviewChartByDate = ({ visaType, embassyCode }) => {\n    const [t] = useTranslation();\n    const dateChartDataSelector = useMemo(() => makeDateChartData(visaType, embassyCode), [visaType, embassyCode]);\n    const [overviewData, earliestDiffMean, latestDiffMean] = useSelector(state => dateChartDataSelector(state));\n    return (\n        <>\n            <ReactEcharts\n                notMerge\n                option={{\n                    title: {\n                        text: \"\",\n                    },\n                    legend: {\n                        data: [],\n                    },\n                    dataZoom,\n                    xAxis: {\n                        type: \"category\",\n                        data: overviewData.map(d => getDateFromISOString(d[1]).join(\"-\")),\n                    },\n                    yAxis: {\n                        type: \"time\",\n                        name: `${t(\"overview.earliestDate\")} ~ ${t(\"overview.latestDate\")}`,\n                        nameLocation: \"middle\",\n                        nameGap: 50,\n                    },\n                    tooltip: {\n                        trigger: \"axis\",\n                        formatter: pack => {\n                            const header = `${pack[0].name}<br/>`;\n                            const rangeStr = (earliestDate, latestDate) => {\n                                if (earliestDate === null && latestDate === null) return \"/\";\n                                const earliestDateStr = getDateFromISOString(earliestDate).join(\"/\");\n                                const latestDateStr = getDateFromISOString(latestDate).join(\"/\");\n                                if (earliestDateStr === latestDateStr) return earliestDateStr;\n                                return `${earliestDateStr} ~ ${latestDateStr}`;\n                            };\n                            const content = pack\n                                .filter(e => e.componentSubType === \"custom\")\n                                .map(\n                                    ({ marker, seriesName, data }) =>\n                                        `${marker}${seriesName}: ${rangeStr(data[1], data[2])}`,\n                                )\n                                .join(\"<br>\");\n                            return header + content;\n                        },\n                    },\n                    series: [\n                        {\n                            name: t(embassyCode),\n                            type: \"line\",\n                            data: overviewData.map(d => [d[0], d[3]]),\n                            encode: {\n                                x: [0],\n                                y: [1],\n                            },\n                        },\n                        {\n                            name: t(embassyCode),\n                            type: \"custom\",\n                            renderItem,\n                            dimensions: [null, \"Earliest\", \"Latest\"],\n                            data: overviewData.map(d => [d[0], d[2], d[3]]),\n                            encode: {\n                                x: [0],\n                                y: [1, 2],\n                            },\n                        },\n                    ],\n                }}\n            />\n            <p style={{ textAlign: \"center\" }}>\n                {t(\"overDateChartTitle\", { embassyName: t(embassyCode) })}\n                {earliestDiffMean === null\n                    ? t(\"overDateChartSubtitleNull\")\n                    : t(\"overDateChartSubtitle\", { earliestDiffMean, latestDiffMean })}\n            </p>\n        </>\n    );\n};\nOverviewChartByDate.propTypes = {\n    visaType: PropTypes.string.isRequired,\n    embassyCode: PropTypes.string.isRequired,\n};\n","import React, { useMemo, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Row, Col, Button, Tooltip, Collapse, Tag } from \"antd\";\nimport { PlusOutlined, MailOutlined, QqOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { useScreenXS } from \"../../hooks\";\nimport { makeNewestVisaStatusSelector, makeCountryCodeSelector, makeDateChartData } from \"../../redux/selectors\";\nimport { getTimeFromUTC } from \"../../utils/misc\";\nimport { overviewAttrProps, newestOverviewProps, overviewProps, dropdownProps } from \"./overviewPropTypes\";\nimport { OverviewChartByDate } from \"./OverviewChart\";\nimport \"./VisaStatusOverview.less\";\n\nconst { Panel } = Collapse;\n\nconst DropdownContent = ({ visaType, embassyCode, countryCode }) => {\n    const [t] = useTranslation();\n    const additionalInfoKey = `additionalInfo${countryCode}`;\n    const additionalInfoMarkdown = t(additionalInfoKey) === additionalInfoKey ? \"\" : t(additionalInfoKey);\n    return (\n        <Row>\n            <Col span={24}>\n                <OverviewChartByDate visaType={visaType} embassyCode={embassyCode} />\n            </Col>\n            {(visaType === \"F\" || visaType === \"J\") && (\n                <Col span={24}>\n                    <h2>{t(\"overview.QQIcon\")}</h2>\n                    <p>\n                        {t(\"additionalInfoTop.part1\")}\n                        {t(\"additionalInfoTop.part2\")}\n                    </p>\n                </Col>\n            )}\n        </Row>\n    );\n};\nDropdownContent.propTypes = dropdownProps;\n\nconst aheadInfo = ({ earliestDiffMean, latestDiffMean }) => {\n    if (earliestDiffMean === null || latestDiffMean === null) {\n        return \"/\";\n    }\n    if (earliestDiffMean === latestDiffMean) {\n        return earliestDiffMean;\n    }\n    return `${earliestDiffMean}~${latestDiffMean}`;\n};\n\nconst ContentBar = ({ embassyCode, earliestDate, newest, visaType }) => {\n    const [t] = useTranslation();\n    const countryCodeSelector = useMemo(() => makeCountryCodeSelector(embassyCode), [embassyCode]);\n    const countryCode = useSelector(state => countryCodeSelector(state));\n    const dateChartDataSelector = useMemo(() => makeDateChartData(visaType, embassyCode), [visaType, embassyCode]);\n    const [, earliestDiffMean, latestDiffMean] = useSelector(state => dateChartDataSelector(state));\n    const [cardDrop, setCardDrop] = useState(false);\n    const { writeTime, availableDate } = newest;\n\n    const DropdownControlBtn = () => (\n        <Tooltip title={t(\"overview.addtionalIcon\")}>\n            <Button\n                icon={<PlusOutlined rotate={cardDrop ? 45 : 0} />}\n                shape=\"circle\"\n                onClick={() => setCardDrop(!cardDrop)}\n            />\n        </Tooltip>\n    );\n\n    const BriefOverview = () => (\n        <Row align=\"middle\" className=\"ovreview-content-row\" gutter={32}>\n            <Col md={{ span: 3 }}>\n                <Tooltip title={t(countryCode)}>{t(embassyCode)}</Tooltip>\n            </Col>\n            <Col md={{ span: 4 }}>\n                {/* eslint-disable-next-line react/prop-types */}\n                <Tooltip title={t(\"overview.earliest\")}>{earliestDate.join(\"/\")}</Tooltip>\n            </Col>\n            <Col md={{ span: 9 }}>\n                <Tooltip title={t(\"overview.newest\")}>\n                    <Row justify=\"center\" align=\"middle\">\n                        <Col xs={{ span: 11 }} md={{ span: 9 }}>\n                            {/* eslint-disable-next-line react/prop-types */}\n                            {availableDate.join(\"/\")}\n                        </Col>\n                        <Col xs={{ span: 13 }} md={{ span: 9 }}>\n                            <Tag>{`${t(\"at\")} ${\n                                writeTime === \"/\" ? writeTime : getTimeFromUTC(writeTime).join(\":\")\n                            }`}</Tag>\n                        </Col>\n                    </Row>\n                </Tooltip>\n            </Col>\n            <Col md={{ span: 3 }}>\n                <Tooltip title={t(\"overview.ahead\")}>{aheadInfo({ earliestDiffMean, latestDiffMean })}</Tooltip>\n            </Col>\n            <Col md={{ span: 5 }}>\n                <DropdownControlBtn />\n            </Col>\n        </Row>\n    );\n\n    return (\n        <Collapse\n            activeKey={cardDrop ? [embassyCode] : []}\n            className=\"overview-dropdown-card\"\n            ghost\n            onChange={() => setCardDrop(!cardDrop)}\n        >\n            <Panel key={embassyCode} header={<BriefOverview />} showArrow={false}>\n                <DropdownContent embassyCode={embassyCode} visaType={visaType} countryCode={countryCode} />\n            </Panel>\n        </Collapse>\n    );\n};\nContentBar.propTypes = { ...overviewAttrProps, ...newestOverviewProps };\n\nconst ContentCard = ({ embassyCode, earliestDate, newest, visaType }) => {\n    const { t } = useTranslation();\n    const countryCodeSelector = useMemo(() => makeCountryCodeSelector(embassyCode), [embassyCode]);\n    const countryCode = useSelector(state => countryCodeSelector(state));\n    const dateChartDataSelector = useMemo(() => makeDateChartData(visaType, embassyCode), [visaType, embassyCode]);\n    const [, earliestDiffMean, latestDiffMean] = useSelector(state => dateChartDataSelector(state));\n    const [cardDrop, setCardDrop] = useState(false);\n    const { writeTime, availableDate } = newest;\n\n    const DropdownControlBtn = () => (\n        <Tooltip title={t(\"overview.addtionalIcon\")}>\n            <Button\n                icon={<PlusOutlined rotate={cardDrop ? 45 : 0} />}\n                shape=\"circle\"\n                onClick={() => setCardDrop(!cardDrop)}\n            />\n        </Tooltip>\n    );\n\n    const BriefOverview = () => (\n        <Row align=\"middle\">\n            <Col span={8}>\n                <Tooltip title={t(countryCode)}>{t(embassyCode)}</Tooltip>\n            </Col>\n            {/* eslint-disable-next-line react/prop-types */}\n            <Col span={cardDrop ? 0 : 8}>{availableDate.join(\"/\")}</Col>\n            <Col span={cardDrop ? 16 : 8}>\n                <Row justify=\"end\" align=\"middle\">\n                    <Col>\n                        <DropdownControlBtn />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n\n    return (\n        <Collapse\n            activeKey={cardDrop ? [embassyCode] : []}\n            className=\"overview-dropdown-card\"\n            ghost\n            onChange={() => setCardDrop(!cardDrop)}\n        >\n            <Panel key={embassyCode} header={<BriefOverview />} showArrow={false}>\n                <Row>\n                    <Col span={8}>\n                        <strong>{t(\"overview.earliestDate\")}: </strong>\n                    </Col>\n                    <Col span={8} className=\"content-data\">\n                        {earliestDate.join(\"/\")}\n                    </Col>\n                    <Col span={8} />\n                    <Col span={8}>\n                        <strong>{t(\"overview.newestFetch\")}: </strong>\n                    </Col>\n                    <Col span={16} className=\"content-data\">\n                        <Row justify=\"center\" align=\"middle\">\n                            <Col span={12}>{availableDate.join(\"/\")}</Col>\n                            <Col span={12}>\n                                <Tag>{`${t(\"at\")} ${\n                                    writeTime === \"/\" ? writeTime : getTimeFromUTC(writeTime).join(\":\")\n                                }`}</Tag>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={8}>\n                        <strong>{t(\"overview.aheadDay\")}: </strong>\n                    </Col>\n                    <Col span={8} className=\"content-data\">\n                        {aheadInfo({ earliestDiffMean, latestDiffMean })}\n                    </Col>\n                    <Col span={8} />\n                </Row>\n                <DropdownContent embassyCode={embassyCode} visaType={visaType} countryCode={countryCode} />\n            </Panel>\n        </Collapse>\n    );\n};\nContentCard.propTypes = { ...overviewAttrProps, ...newestOverviewProps };\n\nconst HeaderBar = () => {\n    const [t] = useTranslation();\n    return (\n        <Row align=\"middle\" className=\"ovreview-header bar\" gutter={16}>\n            <Col xs={{ span: 0 }} md={{ span: 3 }}>\n                <strong>{t(\"Location\")}</strong>\n            </Col>\n            <Col xs={{ span: 0 }} md={{ span: 4 }}>\n                <strong>{t(\"overview.earliestDate\")}</strong>\n            </Col>\n            <Col xs={{ span: 0 }} md={{ span: 9 }}>\n                <strong>{t(\"overview.newestFetch\")}</strong>\n            </Col>\n            <Col xs={{ span: 0 }} md={{ span: 3 }}>\n                <strong>{t(\"overview.aheadDay\")}</strong>\n            </Col>\n            <Col xs={{ span: 0 }} md={{ span: 5 }}>\n                <strong>{t(\"overview.actions\")}</strong>\n            </Col>\n        </Row>\n    );\n};\n\nconst HeaderCard = () => {\n    const [t] = useTranslation();\n    return (\n        <Row align=\"middle\" className=\"ovreview-header card\">\n            <Col span={8}>\n                <strong>{t(\"Location\")}</strong>\n            </Col>\n            <Col span={8}>\n                <strong>{t(\"overview.newestFetch\")}</strong>\n            </Col>\n            <Col span={8}>\n                <strong>{t(\"overview.actions\")}</strong>\n            </Col>\n        </Row>\n    );\n};\n\nexport const OverviewHeader = () => {\n    const screenXS = useScreenXS();\n    return screenXS ? <HeaderCard /> : <HeaderBar />;\n};\n\nexport const OverviewContent = ({ overview }) => {\n    const screenXS = useScreenXS();\n    const newestVisaStatueSelector = useMemo(\n        () => makeNewestVisaStatusSelector(overview.visaType, overview.embassyCode),\n        [overview],\n    );\n    const newestVisaStatus = useSelector(state => newestVisaStatueSelector(state));\n    const newest = newestVisaStatus || { writeTime: \"/\", availableDate: [\"/\"] };\n\n    return screenXS ? <ContentCard {...overview} newest={newest} /> : <ContentBar {...overview} newest={newest} />;\n};\nOverviewContent.propTypes = overviewProps;\n","import OverviewList from \"./OverviewList\";\n\nexport default OverviewList;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { makeOverviewDetailSelector } from \"../../redux/selectors\";\nimport { OverviewContent, OverviewHeader } from \"./OverviewContent\";\nimport \"./VisaStatusOverview.less\";\n\nexport default function VisaStatusOverviewList({ visaType }) {\n    const overviewSelector = useMemo(() => makeOverviewDetailSelector(visaType), [visaType]);\n    const overviewData = useSelector(state => overviewSelector(state));\n\n    return (\n        <List\n            itemLayout=\"vertical\"\n            dataSource={overviewData}\n            header={<OverviewHeader />}\n            renderItem={overview => (\n                <List.Item key={overview.embassyCode}>\n                    <OverviewContent overview={overview} />\n                </List.Item>\n            )}\n        />\n    );\n}\nVisaStatusOverviewList.propTypes = {\n    visaType: PropTypes.string.isRequired,\n};\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeSelect, Space, Radio, Divider } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeEmbassyTreeSelector } from \"../redux/selectors\";\nimport { useScreenXS } from \"../hooks\";\n\nexport default function EmbassyTreeSelect({ sys, setSys, ...treeSelectProps }) {\n    const { t } = useTranslation();\n    const screenXS = useScreenXS();\n    const embassyTreeSelector = useMemo(() => makeEmbassyTreeSelector(sys, t, false), [sys, t]);\n    const embassyTreeOptions = useSelector(state => embassyTreeSelector(state));\n    const regionLst = useSelector(state => state.metadata.region.map(({ region }) => region));\n\n    const searchEmbassy = (inputValue, treeNode) => treeNode.title.toLowerCase().includes(inputValue.toLowerCase());\n    const renderDropdown = originalNode => (\n        <div style={{ padding: 16 }}>\n            <SysSelect />\n            <Divider />\n            {originalNode}\n        </div>\n    );\n    const SysSelect = () => (\n        <Space>\n            <span>{t(\"filter.systemDesc\")}</span>\n            <Radio.Group onChange={e => setSys(e.target.value)} value={sys}>\n                {[\"all\", \"ais\", \"cgi\"].map(s => (\n                    <Radio key={s} value={s}>\n                        {t(s)}\n                    </Radio>\n                ))}\n            </Radio.Group>\n        </Space>\n    );\n\n    return (\n        <TreeSelect\n            {...treeSelectProps}\n            dropdownRender={renderDropdown}\n            treeData={embassyTreeOptions}\n            filterTreeNode={searchEmbassy}\n            showSearch={!screenXS}\n            allowClear\n            maxTagCount={screenXS ? 3 : 9999}\n            listHeight={9999}\n            treeDefaultExpandedKeys={regionLst}\n        />\n    );\n}\nEmbassyTreeSelect.propTypes = {\n    sys: PropTypes.string.isRequired,\n    setSys: PropTypes.func.isRequired,\n};\n","import React, { useMemo, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Space, Button, Row, Col } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { updateFilterAndFetch } from \"../redux/visastatusFilterSlice\";\nimport { makeFilterSelectorByVisaType, makeEmbassyBySysSelector } from \"../redux/selectors\";\nimport EmbassyTreeSelect from \"./EmbassyTreeSelect\";\n\nexport default function EmbassySelector({ visaType }) {\n    const [t] = useTranslation();\n    const [sys, setSys] = useState(\"all\");\n\n    const embassyBySysSelector = useMemo(() => makeEmbassyBySysSelector(sys), [sys]);\n    const embassyBySys = useSelector(state => embassyBySysSelector(state));\n\n    const filterSelector = useMemo(() => makeFilterSelectorByVisaType(visaType), [visaType]);\n    const vsFilter = useSelector(state => filterSelector(state));\n    const defaultFilter = useSelector(state => state.metadata.defaultFilter);\n    const displayValue = useMemo(() => vsFilter.filter(code => embassyBySys.includes(code)), [vsFilter, embassyBySys]);\n\n    const domesticRegion = useSelector(state => state.metadata.region.find(r => r.region === \"DOMESTIC\"));\n    const dispatch = useDispatch();\n\n    const [dropdownOpen, setDropdownOpen] = useState(null);\n    useEffect(() => {\n        if (dropdownOpen !== null && !dropdownOpen && JSON.stringify(displayValue) !== JSON.stringify(vsFilter)) {\n            dispatch(updateFilterAndFetch(visaType, displayValue));\n        }\n    }, [visaType, dispatch, dropdownOpen, displayValue, vsFilter]);\n\n    const resetFilter = () => (setSys(\"all\") || true) && dispatch(updateFilterAndFetch(visaType, defaultFilter));\n\n    const SelectDefaultFilter = () => <Button onClick={() => resetFilter()}>{t(\"filter.default\")}</Button>;\n    const SelectDomesticOnly = () => (\n        <Button\n            onClick={() => domesticRegion && dispatch(updateFilterAndFetch(visaType, domesticRegion.embassyCodeLst))}\n        >\n            {t(\"filter.domestic\")}\n        </Button>\n    );\n\n    return (\n        <Card\n            title={\n                <Row justify=\"space-between\">\n                    <Col xs={{ span: 24 }} md={{ span: 10 }}>\n                        {t(\"filter.desc\")}\n                    </Col>\n                    <Col>\n                        <Space>\n                            <SelectDefaultFilter />\n                            <SelectDomesticOnly />\n                        </Space>\n                    </Col>\n                </Row>\n            }\n        >\n            <EmbassyTreeSelect\n                sys={sys}\n                setSys={s => setSys(s)}\n                value={displayValue}\n                onChange={value => dispatch(updateFilterAndFetch(visaType, value))}\n                onDropdownVisibleChange={open => setDropdownOpen(open)}\n                treeDefaultExpandedKeys={[\"DOMESTIC\"]}\n                placeholder={t(\"filter.placeholder\")}\n                style={{ width: \"100%\" }}\n                size=\"large\"\n                multiple\n                treeCheckable\n            />\n        </Card>\n    );\n}\nEmbassySelector.propTypes = {\n    visaType: PropTypes.string.isRequired,\n};\n","import { useState, useEffect, useMemo, useReducer, useCallback } from \"react\";\nimport { Form } from \"antd\";\nimport { useLocation, useRouteMatch, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { makeFilterSelectorByVisaType } from \"../../redux/selectors\";\nimport { postEmailSubscription } from \"../../services\";\nimport { isoStringToMoment, momentToISOString, zip } from \"../../utils/misc\";\nimport { deleteCookie, getCookie } from \"../../utils/cookie\";\n\n/**\n * Construct request body from subcription form\n *\n * @param {Object} fieldValues Form field values object\n * @param {string} fieldValues.email Email address\n * @param {Object[]} fieldValues.subscription Subscriptions of users\n * @param {string} fieldValues.subscription.visaType Visa type of single subscription\n * @param {string} fieldValues.subscription.embassyCode Embassy code of single subscription\n * @param {moment} [fieldValues.subscription.till] Subscription end date of single subscription\n *\n * @returns {Object} request body\n */\nconst reqBodyFromForm = {\n    subscription: ({ email, subscription }) => ({\n        email,\n        subscription: subscription.map(subs => ({\n            visa_type: subs.visaType,\n            code: subs.embassyCode,\n            till: subs.till ? momentToISOString(subs.till) : null,\n        })),\n    }),\n    unsubscription: ({ email }) => ({ email }),\n};\n\n/**\n * Construct request body from URLSearchParam\n *\n * @param {URLSearchParams} param The passed url search param.\n * @returns {Object} request body\n */\nconst reqBodyFromParam = (param, subscriptionOp) => {\n    const email = param.get(\"email\");\n    const subscriptionRuleCollector = param\n        .getAll(\"visa_type\")\n        .reduce((subsObj, visaType) => ({ ...subsObj, [visaType]: {} }), {});\n\n    zip(param.getAll(\"visa_type\"), param.getAll(\"code\"), param.getAll(\"till\")).forEach(([vt, code, till]) => {\n        subscriptionRuleCollector[vt][till] = subscriptionRuleCollector[vt][till]\n            ? [...subscriptionRuleCollector[vt][till], code]\n            : [code];\n    });\n\n    return {\n        email,\n        [subscriptionOp]: Object.entries(subscriptionRuleCollector)\n            .map(([vt, tillToCode]) =>\n                Object.entries(tillToCode).map(([till, code]) => ({ visa_type: vt, code, till })),\n            )\n            .flat(),\n    };\n};\n\nconst { useForm } = Form;\n\nconst formStateActions = {\n    SET_MODAL_VISIBLE: \"SET_MODAL_VISIBLE\",\n    SET_POSTING: \"SET_POSTING\",\n    SET_POSTING_RESULT: \"SET_POSTING_RESULT\",\n    START_POSTING: \"START_POSTING\",\n    END_POSTING: \"END_POSTING\",\n    RESET: \"RESET\",\n};\nconst initialFormState = { modalVisible: false, posting: false, postSuccessful: null };\nconst formStateReducer = (state, action) => {\n    switch (action.type) {\n        case formStateActions.SET_MODAL_VISIBLE:\n            return { ...state, modalVisible: action.payload.visible };\n        case formStateActions.SET_POSTING:\n            return { ...state, posting: action.payload.posting };\n        case formStateActions.SET_POSTING_RESULT:\n            return { ...state, postSuccessful: action.payload.result };\n        case formStateActions.START_POSTING:\n            return { ...state, modalVisible: true, posting: true };\n        case formStateActions.END_POSTING:\n        case formStateActions.RESET:\n            return initialFormState;\n        default:\n            return state;\n    }\n};\n\n/**\n * Custom hook to return encapsulated form control for rendering the subscription form.\n *\n * @param {string} parentSubscriptionOp subscriptionOp from parents, one of [\"subscription\", \"unsubscription\"]\n * @returns {[FormInstance, {Object, Function, Object}, string, URLSearchParams, Function]} Form controls including a form instance and a reducer for controling the modal\n */\nexport default function useSubscriptionFormControl(parentSubscriptionOp) {\n    const [formState, dispatchFormAction] = useReducer(formStateReducer, initialFormState);\n    const [form] = useForm();\n\n    const visaType = useSelector(state => state.visastatusTab);\n    const filterSelector = useMemo(() => makeFilterSelectorByVisaType(visaType), [visaType]);\n    const visastatusFilter = useSelector(state => filterSelector(state));\n\n    const match = useRouteMatch(\"/visa/email/:subscriptionOp\");\n    const inEmailPage = useMemo(() => !!match && match.isExact, [match]);\n    const { subscriptionOp: pageSubscriptionOp } = useParams();\n\n    // subscriptionOp from page param ('/visa/email/:subscriptionOp) take higher priority\n    const subscriptionOp = useMemo(\n        () => pageSubscriptionOp || parentSubscriptionOp,\n        [pageSubscriptionOp, parentSubscriptionOp],\n    );\n\n    const location = useLocation();\n    const param = useMemo(() => new URLSearchParams(location.search), [location]);\n\n    // determine the step here.\n    const step = useMemo(\n        () =>\n            inEmailPage\n                ? param.toString()\n                    ? subscriptionOp === \"subscription\"\n                        ? \"subscribed\"\n                        : \"deleted\"\n                    : \"confirming\"\n                : subscriptionOp === \"subscription\"\n                ? \"confirming\"\n                : \"deleted\",\n        [inEmailPage, param, subscriptionOp],\n    );\n\n    // Set initial form fields values, use this instead of static `initialValues` prop\n    useEffect(() => {\n        if (!param.toString()) {\n            const email = getCookie(\"email\", { email: \"\" });\n            const { subscription } = getCookie(\"subscription\", {\n                subscription: [{ visaType, embassyCode: [...visastatusFilter], till: null }],\n            });\n            form.setFieldsValue(\n                subscriptionOp === \"subscription\"\n                    ? {\n                          ...email,\n                          subscription: subscription.map(({ till, ...rest }) => ({\n                              ...rest,\n                              till: till ? isoStringToMoment(till) : null,\n                          })),\n                      }\n                    : email,\n            );\n        }\n\n        // clean up the cookie when unmount form from page.\n        // return () => {\n        //     if (inEmailPage && subscriptionOp === \"subscription\") {\n        //         setCookie(\"subscription\", {\n        //             subscription: getCookie(\"subscription\", { subscription: [] }).subscription.filter(\n        //                 subs => subs.embassyCode,\n        //             ),\n        //         });\n        //     }\n        // };\n    }, [form, param, visaType, visastatusFilter, inEmailPage, subscriptionOp]);\n\n    const postSubscription = useCallback(\n        async reqBodyMaterial => {\n            const requestBody =\n                reqBodyMaterial instanceof URLSearchParams\n                    ? reqBodyFromParam(reqBodyMaterial, subscriptionOp)\n                    : reqBodyFromForm[subscriptionOp](reqBodyMaterial);\n\n            try {\n                dispatchFormAction({ type: formStateActions.START_POSTING });\n\n                const postSuccess = await postEmailSubscription(subscriptionOp, step, requestBody);\n\n                dispatchFormAction({ type: formStateActions.SET_POSTING_RESULT, payload: { result: postSuccess } });\n                const timeOut = setTimeout(() => {\n                    dispatchFormAction({ type: formStateActions.END_POSTING });\n                    clearTimeout(timeOut);\n                }, 3000);\n\n                if (step === \"subscribed\" && postSuccess) {\n                    deleteCookie(\"subscription\");\n                }\n            } catch (error) {\n                console.error(`In hook postSubscription: ${error}`);\n                dispatchFormAction({ type: formStateActions.SET_POSTING_RESULT, payload: { result: false } });\n                const timeOut = setTimeout(() => {\n                    dispatchFormAction({ type: formStateActions.END_POSTING });\n                    clearTimeout(timeOut);\n                }, 3000);\n            }\n        },\n        [dispatchFormAction, subscriptionOp, step],\n    );\n\n    // Below hooks are for control in `/visa/email/:subscriptionOp\n    const [pageRedirect, setPageRedirect] = useState(false);\n    const redirect = useMemo(\n        () => inEmailPage && (![\"subscription\", \"unsubscription\"].includes(subscriptionOp) || pageRedirect),\n        [inEmailPage, subscriptionOp, pageRedirect],\n    );\n\n    useEffect(() => {\n        if (inEmailPage && param.toString()) {\n            postSubscription(param);\n        }\n    }, [inEmailPage, param, postSubscription]);\n\n    // start redirect count down after second step of 'subscribed'/'deleted'.\n    useEffect(() => {\n        if (inEmailPage && formState.modalVisible && formState.postSuccessful !== null) {\n            const timeOut = setTimeout(() => {\n                setPageRedirect(true);\n                clearTimeout(timeOut);\n            }, 3000);\n        }\n    }, [inEmailPage, formState]);\n\n    return [\n        { form, formState, dispatchFormAction, formStateActions },\n        { visaType, inEmailPage, subscriptionOp, step, redirect },\n        postSubscription,\n    ];\n}\n","import React from \"react\";\nimport { Form, Input, Button, InputNumber, Row, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport gzh from \"../assets/img/gzh.jpg\";\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst Phone = message => {\n    const onFinish = values => {\n        // axios.post(\"http://www.baidu.com/\", {\n        //     city: values.city,\n        //     phone: values.phone,\n        // });\n\n        /* eslint-disable */\n        alert(values.city+\"订阅成功\");\n        console.log(\"Success:\", values);\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    return (\n        <div id={\"phone\"}>\n            <Row justify=\"space-around\">\n                <Col align={\"center\"}>\n                    <h1 align={\"center\"}>短信订阅</h1>\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            label=\"订阅城市\"\n                            name=\"city\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input your city!\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"北京,上海\" style={{ width: 400 }} />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"手机号\"\n                            name=\"phone\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input your Phone!\",\n                                },\n                                {\n                                    pattern: /^1[3|4|5|7|8][0-9]\\d{8}$/,\n                                    message: \"请输入正确的手机号\",\n                                },\n                            ]}\n                        >\n                            <InputNumber defaultValue={13901797322} style={{ width: 400 }} />\n                        </Form.Item>\n                        {/* \n             <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\"> \n                <Checkbox>Remember me</Checkbox> \n             </Form.Item> */}\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\n// ReactDOM.render(<Demo />, document.getElementById(\"root\"));\nexport default Phone;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Tabs, Row, Col, Divider, Tooltip } from \"antd\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useTranslation } from \"react-i18next\";\nimport { MailOutlined, QqOutlined, LineChartOutlined } from \"@ant-design/icons\";\nimport { changeTabAndSetCookie } from \"../redux/visastatusTabSlice\";\nimport { nonDomesticEmbassyInDefaultFilterSelector } from \"../redux/selectors\";\nimport VisaStatusOverviewList from \"./VisaStatusOverviewList\";\nimport EmbassySelector from \"./EmbassySelector\";\nimport EmailSubscription from \"./EmailSubscription\";\nimport \"./VisaStatusTabs.less\";\nimport { OverviewChartByMinute } from \"./VisaStatusOverviewList/OverviewChart\";\nimport Phone from \"../pages/phone\";\nimport gzh from \"../assets/img/gzh.jpg\";\n\nconst { TabPane } = Tabs;\n\nexport default function VisaStatusTabs() {\n    const [t] = useTranslation();\n    const dispatch = useDispatch();\n    const visaType = useSelector(state => state.visastatusTab);\n    const visaTypeDetails = useSelector(state => state.metadata.visaTypeDetails);\n    const [func, setFunc] = useState(\"chart\");\n\n    return (\n        <>\n            <Tabs\n                activeKey={visaType}\n                onChange={activeKey => dispatch(changeTabAndSetCookie(activeKey))}\n                type=\"card\"\n                size=\"large\"\n                renderTabBar={(props, DefaultTabBar) => <DefaultTabBar {...props} className=\"autofill-tab-bar\" />}\n            >\n                {Array.from(\"FJBHOL\").map(vt => (\n                    <TabPane key={vt} tab={visaTypeDetails[vt]} style={{ flexGrow: 1 }} />\n                ))}\n            </Tabs>\n            <Row gutter={[16, { xs: 16, md: 32 }]}>\n                <Col span={24}>\n                    <EmbassySelector visaType={visaType} />\n                </Col>\n                <Col span={24}>\n                    <Tabs\n                        activeKey={visaType !== \"F\" && visaType !== \"J\" && func === \"qqtg\" ? \"chart\" : func}\n                        onChange={activeKey => setFunc(activeKey)}\n                        tabPosition=\"top\"\n                        centered\n                    >\n                        <TabPane\n                            tab={\n                                <Tooltip title={t(\"overMinuteChartTitle\")}>\n                                    <LineChartOutlined />\n                                    {t(\"overMinuteChartTitleShort\")}\n                                </Tooltip>\n                            }\n                            key={\"chart\"}\n                        >\n                            <OverviewChartByMinute visaType={visaType} />\n                        </TabPane>\n                    </Tabs>\n                </Col>\n                <Col span={24}>\n                    <VisaStatusOverviewList visaType={visaType} />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <h1>联系方式： 曹老师 13901797322</h1>\n                    <img src={gzh} alt={\"公众号\"} />\n                </Col>\n                <Col>\n                    <Phone />\n                </Col>\n            </Row>\n        </>\n    );\n}\n","import React from \"react\";\nimport { Layout, Typography, Row, Col } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { TuixueHeader, VisaStatusTabs } from \"../components\";\nimport \"./VisaStatus.less\";\n\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nexport default function VisaStatus() {\n    const [t] = useTranslation();\n\n    return (\n        <Layout className=\"tuixue-page\">\n            <TuixueHeader />\n            <Content className=\"tuixue-content\">\n                <Title level={2} style={{ textAlign: \"center\", margin: \"8px\", padding: \"8px\" }}>\n                    {t(\"overview.title\")}\n                </Title>\n                <p style={{ textAlign: \"center\" }}>{t(\"cancelDate\")}</p> {/* F1/F2 */}\n                <Row>\n                    <Col\n                        xs={{ span: 22, push: 1 }}\n                        sm={{ span: 22, push: 1 }}\n                        md={{ span: 20, push: 2 }}\n                        lg={{ span: 16, push: 4 }}\n                        xl={{ span: 14, push: 5 }}\n                    >\n                        <VisaStatusTabs />\n                    </Col>\n                </Row>\n            </Content>\n        </Layout>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport VisaStatus from \"./VisaStatus\";\n// import Subscription from \"./Subscription\";\n\nexport default function Pages() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/tjjyvisa\" component={() => <VisaStatus />} />\n                <Redirect to=\"/tjjyvisa\" />\n            </Switch>\n        </Router>\n    );\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactGA from \"react-ga\";\nimport store from \"./redux\";\nimport Pages from \"./pages\";\nimport { useInitialDataFetch, useScript } from \"./hooks\";\nimport \"./assets/styles/index.less\";\n\nfunction App() {\n    ReactGA.initialize(\"UA-102409527-2\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    useInitialDataFetch();\n    useScript(\"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\");\n\n    return (\n        <>\n            <Pages />\n        </>\n    );\n}\n\nexport default () => (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n","import { useEffect } from \"react\";\n\nexport default function useScript(url) {\n    useEffect(() => {\n        const script = document.createElement(\"script\");\n\n        script.src = url;\n        script.async = true;\n\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, [url]);\n}\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchMetadata } from \"../redux/metadataSlice\";\nimport { fetchVisaStatusOverview } from \"../redux/visastatusOverviewSlice\";\nimport { fetchVisaStatusDetail } from \"../redux/visastatusDetailSlice\";\nimport { getCookie } from \"../utils/cookie\";\n\nexport default function useInitialDataFetch() {\n    const dispatch = useDispatch();\n    const visaType = getCookie(\"visaType\", \"F\");\n    useEffect(() => {\n        const giganticFetch = async () => {\n            await dispatch(fetchMetadata()); // Metadata fetch must finish before other fetch starts\n\n            dispatch(fetchVisaStatusOverview(visaType));\n            dispatch(fetchVisaStatusDetail(visaType));\n        };\n\n        giganticFetch();\n    }, [dispatch, visaType]);\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./utils/i18n\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}